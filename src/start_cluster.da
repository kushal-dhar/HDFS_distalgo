NameNode = import_da('NameNode')
DataNode = import_da('DataNode')
Client = import_da('Client')
User = import_da('User')

import Config
import os





def main():

    # Start namenodes
    namenodes = new(NameNode.NameNode, num=1, at=Config.NAMENODE_LOCATION)
    for namenode in namenodes:
        setup(namenode, args=())
    start(namenodes)

    output('namenode started')


    # Start datanodes
    datanodes = new(DataNode.DataNode, num=3, at=Config.DATANODE_LOCATION)
    output("project data path= ", Config.PROJECT_DATA_PATH)
    count = 1
    for datanode in datanodes:
        storageDir = os.path.join(Config.PROJECT_DATA_PATH, str(count))
        if not os.path.isdir(storageDir):
            os.makedirs(storageDir)
        setup(datanode, args=(namenodes, storageDir))
        count += 1
    start(datanodes)

    """
    datanodes = new(DataNode.DataNode, num=3, at=Config.DATANODE_LOCATION)

    count = 1
    for datanode in datanodes:
        storageDir = os.path.join(Config.PROJECT_DATA_PATH, str(count))
        if not os.path.isdir(storageDir):
            os.makedirs(storageDir)
        setup(datanode, args=(namenodes, storageDir))
        count += 1
    start(datanodes)
    
    while True:
        if await(some(received(('start_datanodes', _, _)))):
            #startDatanodes(namenodes, 3)
            output('message received')
    """


    # Start clients
    clients = new(Client.Client, num=1, at=Config.CLIENT_LOCATION)
    for client in clients:
        setup(client, args=(namenodes,))
    start(clients)


    # Start users
    users = new(User.User, num=1, at=Config.USER_LOCATION)
    for user in users:
        setup(user, args=(clients,))
    start(users)

    await(some(received(('start_datanodes', _, _))))

    output('received message to kill existing datandoes')
    send(('kill'), to=datanodes)

    datanodes = new(DataNode.DataNode, num=3, at=Config.DATANODE_LOCATION)
    count = 1
    for datanode in datanodes:
        storageDir = os.path.join(Config.PROJECT_DATA_PATH, str(count))
        if not os.path.isdir(storageDir):
            os.makedirs(storageDir)
        setup(datanode, args=(namenodes, storageDir))
        count += 1
    start(datanodes)

    await(received(('kill')))