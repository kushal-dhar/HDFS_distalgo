
"""
User applications access the HDFS using HDFS client. It is the top level interface for interacting with HDFS.
"""
#class HDFSClient(process):
class HDFSClient():

    def __init__():
        pass

    def setup():
        pass

    def run():
        pass
    
    def openFile(filepath):
        """
        Opens a file for reading/writing.
        Acquires lease for the file by contacting namenode.
        """
        pass
    
    def closeFile(filePath):
        """
        Closes the file.
        Notifies namenode about ending the lease.
        """
        pass
    
    def readFile(filepath):
        """
        Reads the bytes from the specified file.
        The blocks are read in sequential order and full data is returned.
        """
        pass

    def readBlock(blockpath):
        """
        Reads the bytes from the specified file.
        """
        pass
    
    def createFile(filepath):
        """
        Creates a file on the filesystem.
        """
        pass

    def appendToFile(filepath, data):
        """
        Appends data to the specified file.
        First checks if the lease is acquired or not.
        """
        pass

    def deleteFile(filepath):
        """
        Deletes a file from HDFS
        """
        pass

    def getBlockLocation(filename, blockNumber):
        """
        Returns the list of node and filepath where the requested blockNumber of the requested file is stored
        """
        pass
    
    def getLease(filename):
        """
        Acquires the lease on the file by contacting namenode
        """
        pass
    
    def renewLease(filename):
        """
        Renews lease of a file if the current lease is about to expire
        """
        pass
        
    
def main():
    pass