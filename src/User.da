import time


"""
User process in HDFS cluster.
Users interact with HDFS by sending messages to HDFS Client
"""
class User(process):

    def setup(clients):
        self.msgId = 0

    def delay():
        for _ in range(50000000):
            pass
        time.sleep(10)

    def run():
        output('user running: ', self)
        time.sleep(5)
        output('sending create file f1 to client')
        send(('createFile', 'f1'), to=clients)
        await(some(received(('createFile','f1',_))))

        '''
        send(('listFiles'), to=clients)
        await(some(received(('listFiles', _))))
        '''

        output('sending create file f2 to client')
        send(('createFile', 'f2'), to=clients)
        await(some(received(('createFile', 'f2', _))))

        #time.sleep(5)

        send(('listFiles'), to=clients)
        # won't wait here :)
        await(some(received(('listFiles', _))))

        send(('openFile','r','token','f1'), to=clients)
        await(some(received(('openFile', 'r', 'token', 'f1',_))))
        result = setof(r, received(('openFile', 'r', 'token', 'f1',r)) )
        output('client: received openfile result: ', result)

        send(('openFile', 'r', 'token2', 'f2'), to=clients)
        await(some(received(('openFile', 'r', 'token2', 'f2', _))))
        result = setof(r, received(('openFile', 'r', 'token2', 'f2', r)))
        output('client: received openfile result: ', result)




        send(('appendFile', 'token3', 'f2', 'hello append!!\n'), to=clients)
        await(some(received(('appendFile', 'token3', 'f2', _))))
        delay()
        send(('appendFile', 'token4', 'f1', 'Hello HDFS. An awesome tool to store data in equal sized blocks :)'), to=clients)
        await(some(received(('appendFile', 'token4', 'f1', _))))
        result = setof(r, received(('appendFile', 'token4', 'f1', r)))
        output('user: received appendFile result: ', result)



        output('user: read file')
        send(('readFile', 'token2', 'f1', 0, 100), to=clients)
        output("user: awaiting= ", ('readFile', 'token2', 'f1', 0, 100))
        await(some(received(('readFile', 'token2', 'f1', 0, 100, _))))
        result = setof(r, received(('readFile', 'token2', 'f1', 0, 100, r)))
        output('user: received readfile result: ', result)

        await(received(('kill')))


    def receive(msg=('createFile', filename, result)):
        output('user: received createFile result: ', filename, ' = ', result)



    def receive(msg=('listFiles', files)):
        output('user: received listFiles result: ', files)
